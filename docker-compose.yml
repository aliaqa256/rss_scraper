version: "3"

services:

  nginx:
    container_name: nginx
    build: ./nginx
    depends_on:
      - backend
    networks:
      - main
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./backend/static/:/backend/static/
      - ./backend/media/:/backend/media/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf




  backend:
    container_name: backend
    build: ./backend
    # command: sh -c " pip install -r requirements.txt &&   python manage.py makemigrations --noinput && python manage.py migrate && gunicorn config.wsgi -b 0.0.0.0:8000"
    command: sh -c "python manage.py makemigrations --noinput && python manage.py migrate && gunicorn config.wsgi -b 0.0.0.0:8000"
    # command: sh -c "yes | python manage.py makemigrations --merge && python manage.py migrate && gunicorn config.wsgi -b 0.0.0.0:8000"
    # command: sh -c "python manage.py migrate && daphne -b 0.0.0.0 -p 8000 config.routing:application"
    volumes:
      - ./backend:/backend/
      - ./backend/static/:/backend/static/
      - ./backend/media/:/backend/media/
    env_file: backend/config/.env
    depends_on:
      - redis
    ports:
      - "8000:8000"
    restart: always
    networks:
      - main


  redis:
    container_name: redis
    image: "redis:6.2"
    command: redis-server
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - ./redis_data:/data
    networks:
      - main


  celery:
    container_name: celery
    build: ./backend
    command: "celery -A config worker -l INFO"
    volumes:
      - ./backend:/backend
    env_file: backend/config/.env
    environment:
      - C_FORCE_ROOT=true
    depends_on:
      - backend
      - redis
    networks:
      - main
    restart: always




  celery_beats:
    container_name: celery_beats
    build: ./backend
    command: "celery -A config beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - ./backend:/backend
    env_file: backend/config/.env
    depends_on:
      - backend
      - celery
      - redis
    networks:
      - main
    restart: always


networks:
  main: